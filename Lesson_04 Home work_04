#small_list = [3, 1, 4, 5, 2, 5, 3]
#big_list = [3, 5, -2, -1, -3, 0, 1, 4, 5, 2]
# task 1. Знайдіть всі унікальні елементи в списку small_list
small_list = [3, 1, 4, 5, 2, 5, 3]
unique_elements = set(small_list)
print(unique_elements)

# task 2. Знайдіть середнє арифметичне всіх елементів у списку small_list
small_list = [3, 1, 4, 5, 2, 5, 3]
average_arithmetic = sum(small_list) / len(small_list)
print(average_arithmetic)

# task 3. Перевірте, чи є в списку big_list дублікати
big_list = [3, 5, -2, -1, -3, 0, 1, 4, 5, 2]
if len(big_list) != len(set(big_list)):
    print("List contains duplicates")
else:
    print("The list does not contain duplicates")

base_dict = {'contry':'Ukraine', 'continent': 'Europe', 'size': 123}
add_dict = {"a":1, "b":2, "c":2, "d":3, 'size': 12}
# task 4. Знайдіть ключ з максимальним значенням у словнику add_dict
add_dict = {"a":1, "b":2, "c":2, "d":3, 'size': 12}
max_key = max(add_dict, key=add_dict.get)
print(max_key)



# task 5. Створіть новий словник, в якому ключі та значення будуть
# замінені місцями у заданому словнику
old_dict = {"a":1, "b":2, "c":2, "d":3, 'size': 12}
new_dict = {v:k for k, v in old_dict.items()}
print(new_dict)


# task 6. Об'єднайте два словника base_dict та add_dict  в новий словник sum_dict
# Якщо ключі збігаються, то перетворіть значення в строку та об'єднайте їх
#sum_dict = {}
base_dict = {'contry': 'Ukraine', 'continent': 'Europe', 'size': 123}
add_dict = {"a": 1, "b": 2, "c": 2, "d": 3, 'size': 12}

sum_dict = base_dict.copy()
sum_dict.update((k, str(base_dict[k])+str(v)) if k in base_dict else (k, v) for k, v in add_dict.items())

print(sum_dict)


# task 7.
line = "Створіть множину всіх символів, які входять у заданий рядок"
chars = list(line)
char_set = set(chars)
print(char_set)


# task 8. Обчисліть суму елементів двох множин, які не є спільними
set_1 = {1, 2, 3, 4, 5}
set_2 = {4, 6, 5, 10}

diff_set = set_1 - set_2
sum_diff_set = sum(diff_set)
print(sum_diff_set)



# task 9. Створіть два списки та обробіть їх так, щоб отримати сет, який
# містить всі елементи з обох списків,  які зустрічаються тільки один раз.
# Наприклад, якщо перший список містить [1, 2, 3, 4], а другий
# список містить [3, 4, 5, 6], то повернутий сет містить [1, 2, 5, 6]

list_01 = [1, 2, 3, 4]
list_02 = [3, 4, 5, 6]

unique_list = []

for item in list_01:
    if list_01.count(item) == 1 and item not in list_02:
        unique_list.append(item)

for item in list_02:
    if list_02.count(item) == 1 and item not in list_01:
        unique_list.append(item)

unique_set = set(unique_list)
print(unique_set)





#person_list = [('Alice', 25), ('Boby', 19), ('Charlie', 32),
              # ('David', 28), ('Emma', 22), ('Frank', 45)]
# task 10. Обробіть список кортежів person_list, що містять ім'я та вік людей,
# так, щоб отримати словник, де ключі - вікові діапазони (10-19, 20-29 тощо),
# а значення - списки імен людей, які потрапляють в кожен діапазон.
# Приклад виводу:
# {'10-19': ['A'], '20-29': ['B', 'C', 'D'], '30-39': ['E'], '40-49': ['F']}

person_list = [('Alice', 25), ('Boby', 19), ('Charlie', 32), ('David', 28), ('Emma', 22), ('Frank', 45)]

result_dict = {}

for person in person_list:
    name = person[0]
    age = person[1]
    age_group = str(age // 10 * 10) + '-' + str(age // 10 * 10 + 9)
    if age_group not in result_dict:
        result_dict[age_group] = []
    result_dict[age_group].append(name)
print(result_dict)
